<?xml version="1.0" encoding="UTF-8"?>
<CDPlusPlus_Builder_Version_1.0.0>
  <comment>components : rustIncident@rustIncident &#xd;</comment>
  <comment>out : incidentRustOut &#xd;</comment>
  <comment>Link : incidentRustOut@rustIncident incidentRustOut&#xd;</comment>
  <rust>
    <type> cell&#xd;</type>
    <dim> (20,20,2)&#xd;</dim>
    <delay> inertial&#xd;</delay>
    <defaultDelayTime> 100&#xd;</defaultDelayTime>
    <border> nowrapped &#xd;</border>
    <neighbors> rust(-1,-1,0) rust(-1,0,0) rust(-1,1,0) &#xd;</neighbors>
    <neighbors> rust(0,-1,0)  rust(0,0,0)  rust(0,1,0)&#xd;</neighbors>
    <neighbors> rust(1,-1,0)  rust(1,0,0)  rust(1,1,0)&#xd;</neighbors>
    <neighbors> rust(-1,-1,1) rust(-1,0,1) rust(-1,1,1) &#xd;</neighbors>
    <neighbors> rust(0,-1,1)  rust(0,0,1)  rust(0,1,1)&#xd;</neighbors>
    <neighbors> rust(1,-1,1)  rust(1,0,1)  rust(1,1,1)&#xd;</neighbors>
    <neighbors> rust(0,0,-1)&#xd;</neighbors>
    <initialvalue> 0&#xd;</initialvalue>
    <initialcellsvalue> initial.val&#xd;</initialcellsvalue>
    <comment>Main rust zone, visual layer&#xd;</comment>
    <zone> rust-zone { (0,0,0)..(19,19,0) }&#xd;</zone>
    <comment>Arbiter is used to decide which direction the rust will spread&#xd;</comment>
    <zone> arbiter-middle { (1,1,1)..(18,18,1) }&#xd;</zone>
    <zone> arbiter-leftEdge { (0,1,1)..(0,18,1) }&#xd;</zone>
    <zone> arbiter-rightEdge { (19,1,1)..(19,18,1) }&#xd;</zone>
    <zone> arbiter-topEdge { (1,0,1)..(18,0,1) }&#xd;</zone>
    <zone> arbiter-bottomEdge { (1,19,1)..(18,19,1) }&#xd;</zone>
    <zone> arbiter-topLeftCorner { (0,0,1) }&#xd;</zone>
    <zone> arbiter-topRightCorner { (19,0,1) }&#xd;</zone>
    <zone> arbiter-bottomLeftCorner { (0,19,1) }&#xd;</zone>
    <zone> arbiter-bottomRightCorner { (19,19,1) }&#xd;</zone>
    <comment> Arbiter selects cell around it given this scheme&#xd;</comment>
    <comment> -------------&#xd;</comment>
    <comment> | 1 | 2 | 3 |&#xd;</comment>
    <comment> -------------&#xd;</comment>
    <comment> | 4 |   | 5 |&#xd;</comment>
    <comment> -------------&#xd;</comment>
    <comment> | 6 | 7 | 8 |&#xd;</comment>
    <comment> -------------&#xd;</comment>
  </rust>
  <arbiter-middle>
    <rule> { round(uniform(1,8)) } 100 { #macro(isCellRusty) }&#xd;</rule>
    <rule> { 1 } 100 { not #macro(isCellRusty) }&#xd;</rule>
  </arbiter-middle>
  <arbiter-leftEdge>
    <rule> { round(uniform(2,8)) } 100 { #macro(isCellRusty) }&#xd;</rule>
    <rule> { 1 } 100 { not #macro(isCellRusty) }&#xd;</rule>
  </arbiter-leftEdge>
  <arbiter-rightEdge>
    <rule> { round(uniform(1,7)) } 100 { #macro(isCellRusty) }&#xd;</rule>
    <rule> { 1 } 100 { not #macro(isCellRusty) }&#xd;</rule>
  </arbiter-rightEdge>
  <arbiter-topEdge>
    <rule> { round(uniform(4,8)) } 100 { #macro(isCellRusty) }&#xd;</rule>
    <rule> { 1 } 100 { not #macro(isCellRusty) }&#xd;</rule>
  </arbiter-topEdge>
  <arbiter-bottomEdge>
    <rule> { round(uniform(1,5)) } 100 { #macro(isCellRusty) }&#xd;</rule>
    <rule> { 1 } 100 { not #macro(isCellRusty) }&#xd;</rule>
  </arbiter-bottomEdge>
  <arbiter-topLeftCorner>
    <rule> { round(uniform(5,8)) } 100 { #macro(isCellRusty) }&#xd;</rule>
    <rule> { 1 } 100 { not #macro(isCellRusty) }&#xd;</rule>
  </arbiter-topLeftCorner>
  <arbiter-topRightCorner>
    <rule> { round(uniform(4,7)) } 100 { #macro(isCellRusty) }&#xd;</rule>
    <rule> { 1 } 100 { not #macro(isCellRusty) }&#xd;</rule>
  </arbiter-topRightCorner>
  <arbiter-bottomLeftCorner>
    <rule> { round(uniform(2,5)) } 100 { #macro(isCellRusty) }&#xd;</rule>
    <rule> { 1 } 100 { not #macro(isCellRusty) }&#xd;</rule>
  </arbiter-bottomLeftCorner>
  <arbiter-bottomRightCorner>
    <rule> { round(uniform(1,4)) } 100 { #macro(isCellRusty) }&#xd;</rule>
    <rule> { 1 } 100 { not #macro(isCellRusty) }&#xd;</rule>
  </arbiter-bottomRightCorner>
</CDPlusPlus_Builder_Version_1.0.0>
